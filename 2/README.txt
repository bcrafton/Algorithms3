*The heap method we made for the greedy graph coloring is not working on the mvc studio compiler but it was working on linux c++. We have used the bredth first traversal method instead.*

The runtime for these algorithms was polynomial time. They found heuristic solutions because the optimal solution would require exponential time to find, like in the exhaustive approach that was taken in HW1. The knapsack solution built a heap and stored the key of each node as the ratio of value and cost and chose the highest value:cost ratio items it could find. This algorithm ran in O(nlogn) time because it took that long to build the heap. After that it was simply poping all the values off the heap which was also nlogn time.
In the greedy graph coloring algorithm we used a bredth first search on all the nodes and colored them based on what the nodes around them were colored. We also used a heap ordered from high degree to low degree of the vertices. This method was working on my linux c++ compiler but not on the visual studio compiler to we have left it out on submission. The bredth first search method took O(n) time because it had to iterate through every node and color them.
