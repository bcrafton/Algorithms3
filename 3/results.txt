Running knapsack and graph coloring using ILP has different strengths then the exhaustive and greedy algorithms had. ILP implements the properties of branch and bound, to cut away at possible solutions, such that it only has to explore, or “branch” when necessary. 
Compared to an Exhaustive Algorithms ILP is generally more time efficient as it explores far less options and finds the same most optimized solution. As an important side note, though it is statistically improbably, there is a chance that in the worst case, it will explore branches from worst to best and not be able to bound, thus making it take as long as exhaustive. 
Compared to a greedy algorithm ILP produces a more accurate solution, however, this comes at the cost of efficiency. ILP will generally take longer than a greedy algorithm.
